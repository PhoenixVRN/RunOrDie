using UnityEngine;
using UnityEditor;

/// <summary>
/// Helper –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤—Ä–∞–≥–æ–≤
/// </summary>
public class EnemySetupHelper : EditorWindow
{
    [MenuItem("Lode Runner/–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–∞–≥–æ–≤ (Enemy Setup)")]
    public static void ShowWindow()
    {
        EnemySetupHelper window = GetWindow<EnemySetupHelper>("Enemy Setup");
        window.minSize = new Vector2(450, 650);
        window.Show();
    }

    private void OnGUI()
    {
        GUILayout.Label("ü§ñ –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´ –í–†–ê–ì–û–í", EditorStyles.boldLabel);
        GUILayout.Space(10);
        
        // –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Ñ–∞–±–∞
        DrawSectionHeader("–®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Ñ–∞–±–∞ –≤—Ä–∞–≥–∞");
        
        EditorGUILayout.HelpBox("–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑–æ–≤—ã–π –ø—Ä–µ—Ñ–∞–± –≤—Ä–∞–≥–∞ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏", MessageType.Info);
        
        if (GUILayout.Button("ü§ñ –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ—Ñ–∞–± Enemy", GUILayout.Height(30)))
        {
            CreateEnemyPrefab();
        }
        
        GUILayout.Space(10);
        
        // –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∞–≤–Ω–µ—Ä–∞
        DrawSectionHeader("–®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∞–≤–Ω–µ—Ä–∞ –≤—Ä–∞–≥–æ–≤");
        
        if (GUILayout.Button("üìç –°–æ–∑–¥–∞—Ç—å EnemySpawner –≤ —Å—Ü–µ–Ω–µ", GUILayout.Height(30)))
        {
            CreateEnemySpawner();
        }
        
        GUILayout.Space(5);
        
        EditorGUILayout.HelpBox("EnemySpawner —Å–æ–∑–¥–∞–µ—Ç –≤—Ä–∞–≥–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ—á–∫–∞—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —É—Ä–æ–≤–Ω—è", MessageType.None);
        
        GUILayout.Space(10);
        
        // –®–∞–≥ 3: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        DrawSectionHeader("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ");
        
        GUILayout.Label("1Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ—Ñ–∞–± Enemy", EditorStyles.wordWrappedLabel);
        GUILayout.Label("2Ô∏è‚É£ –ó–∞–º–µ–Ω–∏—Ç–µ —Å–ø—Ä–∞–π—Ç –Ω–∞ —Å–ø—Ä–∞–π—Ç –≤—Ä–∞–≥–∞", EditorStyles.wordWrappedLabel);
        GUILayout.Label("3Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ EnemySpawner –≤ —Å—Ü–µ–Ω–µ", EditorStyles.wordWrappedLabel);
        GUILayout.Label("4Ô∏è‚É£ –ù–∞–∑–Ω–∞—á—å—Ç–µ Enemy Prefab –≤ EnemySpawner", EditorStyles.wordWrappedLabel);
        GUILayout.Label("5Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞ (Spawn Points)", EditorStyles.wordWrappedLabel);
        GUILayout.Label("6Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–≥—Ä—É!", EditorStyles.wordWrappedLabel);
        
        GUILayout.Space(10);
        
        DrawSectionHeader("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã EnemyController");
        
        GUILayout.Label("‚Ä¢ Walk Speed (3) - —Å–∫–æ—Ä–æ—Å—Ç—å —Ö–æ–¥—å–±—ã", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ Climb Speed (2) - —Å–∫–æ—Ä–æ—Å—Ç—å –ª–∞–∑–∞–Ω–∏—è", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ Detection Range (15) - –¥–∞–ª—å–Ω–æ—Å—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ Update Path Interval (0.5) - —á–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—É—Ç–∏", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ Stuck In Hole Time (3) - –≤—Ä–µ–º—è –≤ —è–º–µ", EditorStyles.wordWrappedLabel);
        
        GUILayout.Space(10);
        
        DrawSectionHeader("üéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –≤—Ä–∞–≥–∏");
        
        GUILayout.Label("–ü–†–ï–°–õ–ï–î–û–í–ê–ù–ò–ï:", EditorStyles.boldLabel);
        GUILayout.Label("‚Ä¢ –í—Ä–∞–≥–∏ –∏—â—É—Ç –∏–≥—Ä–æ–∫–∞ –≤ —Ä–∞–¥–∏—É—Å–µ Detection Range", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ –ò–¥—É—Ç –∫ –∏–≥—Ä–æ–∫—É –ø–æ –∫—Ä–∞—Ç—á–∞–π—à–µ–º—É –ø—É—Ç–∏", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ –ú–æ–≥—É—Ç –ª–∞–∑–∞—Ç—å –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–∞–º", EditorStyles.wordWrappedLabel);
        
        GUILayout.Space(5);
        
        GUILayout.Label("–í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï:", EditorStyles.boldLabel);
        GUILayout.Label("‚Ä¢ –ü—Ä–∏ –∫–∞—Å–∞–Ω–∏–∏ –∏–≥—Ä–æ–∫–∞ ‚Üí –∏–≥—Ä–æ–∫ —É–º–∏—Ä–∞–µ—Ç", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ –ï—Å–ª–∏ —É–ø–∞–ª–∏ –≤ —è–º—É ‚Üí –∑–∞—Å—Ç—Ä–µ–≤–∞—é—Ç –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã", EditorStyles.wordWrappedLabel);
        GUILayout.Label("‚Ä¢ –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —è–º—ã ‚Üí –≤–æ–∑—Ä–æ–∂–¥–∞—é—Ç—Å—è", EditorStyles.wordWrappedLabel);
        
        GUILayout.Space(10);
        
        DrawSectionHeader("üé® –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ Scene View");
        
        GUILayout.Label("–í—ã–¥–µ–ª–∏—Ç–µ Enemy:", EditorStyles.boldLabel);
        GUILayout.Label("üî¥ –ö—Ä–∞—Å–Ω–∞—è —Å—Ñ–µ—Ä–∞ - –∑–æ–Ω–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è", EditorStyles.wordWrappedLabel);
        GUILayout.Label("üü¢ –ó–µ–ª–µ–Ω—ã–π –∫—Ä—É–≥ - groundCheck (–Ω–∞ –∑–µ–º–ª–µ)", EditorStyles.wordWrappedLabel);
        GUILayout.Label("üü° –ñ–µ–ª—Ç–∞—è –ª–∏–Ω–∏—è - –ø—É—Ç—å –∫ –∏–≥—Ä–æ–∫—É", EditorStyles.wordWrappedLabel);
        
        GUILayout.Space(10);
        
        EditorGUILayout.HelpBox("üí° –°–æ–≤–µ—Ç: –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞ –≤—Ä–∞–≥–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö —É—Ä–æ–≤–Ω—è –¥–ª—è –±–∞–ª–∞–Ω—Å–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏", MessageType.Info);
    }

    private void DrawSectionHeader(string title)
    {
        GUILayout.Space(5);
        EditorGUILayout.LabelField(title, EditorStyles.boldLabel);
        EditorGUILayout.LabelField("", GUI.skin.horizontalSlider);
        GUILayout.Space(5);
    }

    private void CreateEnemyPrefab()
    {
        // –°–æ–∑–¥–∞–µ–º GameObject
        GameObject enemyObject = new GameObject("Enemy");
        
        // –î–æ–±–∞–≤–ª—è–µ–º SpriteRenderer
        SpriteRenderer sr = enemyObject.AddComponent<SpriteRenderer>();
        sr.sprite = AssetDatabase.GetBuiltinExtraResource<Sprite>("UI/Skin/Knob.psd");
        sr.color = Color.red;
        
        // –î–æ–±–∞–≤–ª—è–µ–º Rigidbody2D
        Rigidbody2D rb = enemyObject.AddComponent<Rigidbody2D>();
        rb.gravityScale = 3f;
        rb.constraints = RigidbodyConstraints2D.FreezeRotation;
        rb.collisionDetectionMode = CollisionDetectionMode2D.Continuous;
        
        // –î–æ–±–∞–≤–ª—è–µ–º CapsuleCollider2D
        CapsuleCollider2D collider = enemyObject.AddComponent<CapsuleCollider2D>();
        collider.size = new Vector2(0.5f, 1f);
        collider.direction = CapsuleDirection2D.Vertical;
        
        // –°–æ–∑–¥–∞–µ–º GroundCheck
        GameObject groundCheckObj = new GameObject("GroundCheck");
        groundCheckObj.transform.parent = enemyObject.transform;
        groundCheckObj.transform.localPosition = new Vector3(0f, -0.6f, 0f);
        
        // –î–æ–±–∞–≤–ª—è–µ–º EnemyController
        EnemyController enemy = enemyObject.AddComponent<EnemyController>();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ SerializedObject
        SerializedObject so = new SerializedObject(enemy);
        
        so.FindProperty("walkSpeed").floatValue = 3f;
        so.FindProperty("climbSpeed").floatValue = 2f;
        so.FindProperty("groundCheck").objectReferenceValue = groundCheckObj.transform;
        so.FindProperty("groundCheckRadius").floatValue = 0.2f;
        so.FindProperty("detectionRange").floatValue = 15f;
        so.FindProperty("updatePathInterval").floatValue = 0.5f;
        so.FindProperty("stuckInHoleTime").floatValue = 3f;
        so.FindProperty("respawnDelay").floatValue = 2f;
        so.FindProperty("spriteRenderer").objectReferenceValue = sr;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–æ–∏ (–Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–¥ –ø–æ–∑–∂–µ)
        so.FindProperty("groundLayer").intValue = LayerMask.GetMask("Ground", "GroundDig");
        so.FindProperty("ladderLayer").intValue = LayerMask.GetMask("Ladder");
        so.FindProperty("playerLayer").intValue = LayerMask.GetMask("Default");
        
        so.ApplyModifiedProperties();
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–µ—Ñ–∞–±–æ–≤ –µ—Å–ª–∏ –Ω–µ—Ç
        string folderPath = "Assets/GamePrefabs/Enemies";
        if (!AssetDatabase.IsValidFolder(folderPath))
        {
            AssetDatabase.CreateFolder("Assets/GamePrefabs", "Enemies");
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –ø—Ä–µ—Ñ–∞–±
        string prefabPath = $"{folderPath}/Enemy.prefab";
        GameObject prefab = PrefabUtility.SaveAsPrefabAsset(enemyObject, prefabPath);
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ —Å—Ü–µ–Ω—ã
        DestroyImmediate(enemyObject);
        
        // –í—ã–¥–µ–ª—è–µ–º –ø—Ä–µ—Ñ–∞–± –≤ Project
        Selection.activeObject = prefab;
        EditorGUIUtility.PingObject(prefab);
        
        EditorUtility.DisplayDialog("–ì–æ—Ç–æ–≤–æ!", 
            $"–ü—Ä–µ—Ñ–∞–± Enemy —Å–æ–∑–¥–∞–Ω!\n" +
            $"–ü—É—Ç—å: {prefabPath}\n\n" +
            $"–ù–∞—Å—Ç—Ä–æ–π—Ç–µ:\n" +
            $"1. –ó–∞–º–µ–Ω–∏—Ç–µ —Å–ø—Ä–∞–π—Ç –Ω–∞ —Å–ø—Ä–∞–π—Ç –≤—Ä–∞–≥–∞\n" +
            $"2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ Inspector\n" +
            $"3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ EnemySpawner", "OK");
    }

    private void CreateEnemySpawner()
    {
        // –°–æ–∑–¥–∞–µ–º GameObject
        GameObject spawnerObject = new GameObject("EnemySpawner");
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        EnemySpawner spawner = spawnerObject.AddComponent<EnemySpawner>();
        
        // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ —Å–ø–∞–≤–Ω–∞
        Transform[] spawnPoints = new Transform[3];
        
        for (int i = 0; i < 3; i++)
        {
            GameObject spawnPoint = new GameObject($"SpawnPoint_{i + 1}");
            spawnPoint.transform.parent = spawnerObject.transform;
            spawnPoint.transform.position = new Vector3(i * 5f, 0f, 0f);
            spawnPoints[i] = spawnPoint.transform;
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        SerializedObject so = new SerializedObject(spawner);
        SerializedProperty spawnPointsProp = so.FindProperty("spawnPoints");
        spawnPointsProp.arraySize = 3;
        
        for (int i = 0; i < 3; i++)
        {
            spawnPointsProp.GetArrayElementAtIndex(i).objectReferenceValue = spawnPoints[i];
        }
        
        so.FindProperty("spawnOnStart").boolValue = true;
        so.FindProperty("maxEnemies").intValue = 5;
        so.FindProperty("enemyWalkSpeed").floatValue = 3f;
        so.FindProperty("enemyClimbSpeed").floatValue = 2f;
        so.FindProperty("detectionRange").floatValue = 15f;
        
        so.ApplyModifiedProperties();
        
        // –í—ã–¥–µ–ª—è–µ–º –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏
        Selection.activeGameObject = spawnerObject;
        EditorGUIUtility.PingObject(spawnerObject);
        
        EditorUtility.DisplayDialog("–ì–æ—Ç–æ–≤–æ!", 
            "EnemySpawner —Å–æ–∑–¥–∞–Ω –≤ —Å—Ü–µ–Ω–µ!\n\n" +
            "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ:\n" +
            "1. –ù–∞–∑–Ω–∞—á—å—Ç–µ Enemy Prefab\n" +
            "2. –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞ –≤ –Ω—É–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö\n" +
            "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Ä–∞–≥–æ–≤\n\n" +
            "–û–±—ä–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω –≤ Hierarchy.", "OK");
    }
}

