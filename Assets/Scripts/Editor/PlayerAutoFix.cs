using UnityEngine;
using UnityEditor;

/// <summary>
/// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å PlayerController
/// </summary>
public class PlayerAutoFix : EditorWindow
{
    [MenuItem("Tools/Lode Runner/üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞")]
    public static void ShowWindow()
    {
        var window = GetWindow<PlayerAutoFix>("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞");
        window.minSize = new Vector2(400, 300);
        window.Show();
    }

    [MenuItem("Tools/Lode Runner/üîß –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Player", false, 1)]
    public static void QuickFix()
    {
        // –ù–∞–π—Ç–∏ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Å—Ü–µ–Ω–µ
        PlayerController[] players = FindObjectsOfType<PlayerController>();
        
        if (players.Length == 0)
        {
            Debug.LogWarning("–ù–∞ —Å—Ü–µ–Ω–µ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ —Å PlayerController!");
            EditorUtility.DisplayDialog("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", 
                "–ù–∞ —Å—Ü–µ–Ω–µ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º PlayerController.\n\n" +
                "–°–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä–æ–∫–∞ —á–µ—Ä–µ–∑:\n" +
                "GameObject ‚Üí Lode Runner ‚Üí –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä–æ–∫–∞", "OK");
            return;
        }

        int fixedCount = 0;
        
        foreach (var player in players)
        {
            if (FixPlayer(player))
            {
                fixedCount++;
            }
        }

        if (fixedCount > 0)
        {
            Debug.Log($"‚úì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: {fixedCount}");
            EditorUtility.DisplayDialog("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ", 
                $"‚úì –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: {fixedCount}\n\n" +
                $"GroundCheck —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω\n" +
                $"InputActions –Ω–∞–∑–Ω–∞—á–µ–Ω (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω)", "OK");
        }
        else
        {
            Debug.Log("–í—Å–µ –∏–≥—Ä–æ–∫–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
            EditorUtility.DisplayDialog("–í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ", 
                "–í—Å–µ –∏–≥—Ä–æ–∫–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n\n" +
                "GroundCheck –∏ InputActions –Ω–∞–∑–Ω–∞—á–µ–Ω—ã.", "OK");
        }
    }

    private static bool FixPlayer(PlayerController player)
    {
        bool wasFixed = false;
        GameObject playerObj = player.gameObject;
        
        SerializedObject serializedPlayer = new SerializedObject(player);
        
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ GroundCheck
        SerializedProperty groundCheckProp = serializedPlayer.FindProperty("groundCheck");
        if (groundCheckProp != null && groundCheckProp.objectReferenceValue == null)
        {
            // –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π GroundCheck
            Transform existingGroundCheck = playerObj.transform.Find("GroundCheck");
            
            if (existingGroundCheck == null)
            {
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GroundCheck
                GameObject groundCheck = new GameObject("GroundCheck");
                groundCheck.transform.SetParent(playerObj.transform);
                groundCheck.transform.localPosition = new Vector3(0, -0.5f, 0);
                existingGroundCheck = groundCheck.transform;
                
                Undo.RegisterCreatedObjectUndo(groundCheck, "Create GroundCheck");
                Debug.Log($"‚úì –°–æ–∑–¥–∞–Ω GroundCheck –¥–ª—è '{playerObj.name}'");
            }
            
            // –ù–∞–∑–Ω–∞—á–∞–µ–º GroundCheck
            groundCheckProp.objectReferenceValue = existingGroundCheck;
            wasFixed = true;
            Debug.Log($"‚úì GroundCheck –Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è '{playerObj.name}'");
        }
        
        // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ InputActions
        SerializedProperty inputActionsProp = serializedPlayer.FindProperty("inputActions");
        if (inputActionsProp != null && inputActionsProp.objectReferenceValue == null)
        {
            // –ò—â–µ–º InputActionAsset –≤ –ø—Ä–æ–µ–∫—Ç–µ
            string[] guids = AssetDatabase.FindAssets("InputSystem_Actions t:InputActionAsset");
            if (guids.Length > 0)
            {
                string path = AssetDatabase.GUIDToAssetPath(guids[0]);
                var inputAsset = AssetDatabase.LoadAssetAtPath<UnityEngine.InputSystem.InputActionAsset>(path);
                
                if (inputAsset != null)
                {
                    inputActionsProp.objectReferenceValue = inputAsset;
                    wasFixed = true;
                    Debug.Log($"‚úì InputActions –Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è '{playerObj.name}'");
                }
            }
        }
        
        if (wasFixed)
        {
            serializedPlayer.ApplyModifiedProperties();
            EditorUtility.SetDirty(player);
        }
        
        return wasFixed;
    }

    private void OnGUI()
    {
        EditorGUILayout.LabelField("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞", EditorStyles.boldLabel);
        EditorGUILayout.Space(10);

        EditorGUILayout.HelpBox(
            "–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç:\n\n" +
            "‚Ä¢ –°–æ–∑–¥–∞—Å—Ç GroundCheck –æ–±—ä–µ–∫—Ç\n" +
            "‚Ä¢ –ù–∞–∑–Ω–∞—á–∏—Ç GroundCheck –≤ PlayerController\n" +
            "‚Ä¢ –ù–∞–∑–Ω–∞—á–∏—Ç InputActions (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω)\n\n" +
            "–†–∞–±–æ—Ç–∞–µ—Ç —Å–æ –≤—Å–µ–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –Ω–∞ —Å—Ü–µ–Ω–µ.",
            MessageType.Info
        );

        EditorGUILayout.Space(10);

        GUI.backgroundColor = Color.green;
        if (GUILayout.Button("üîß –ò–°–ü–†–ê–í–ò–¢–¨ –í–°–ï –ü–†–û–ë–õ–ï–ú–´", GUILayout.Height(40)))
        {
            QuickFix();
        }
        GUI.backgroundColor = Color.white;

        EditorGUILayout.Space(20);
        
        EditorGUILayout.LabelField("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:", EditorStyles.boldLabel);
        EditorGUILayout.Space(5);

        if (GUILayout.Button("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞", GUILayout.Height(30)))
        {
            EditorApplication.ExecuteMenuItem("GameObject/Lode Runner/–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä–æ–∫–∞");
            Close();
        }

        if (GUILayout.Button("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∫–∞–∫ –∏–≥—Ä–æ–∫–∞", GUILayout.Height(30)))
        {
            if (Selection.activeGameObject != null)
            {
                EditorApplication.ExecuteMenuItem("GameObject/Lode Runner/–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–∫ –∏–≥—Ä–æ–∫–∞");
                Close();
            }
            else
            {
                EditorUtility.DisplayDialog("–û–±—ä–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω", 
                    "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –≤ Hierarchy –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.", "OK");
            }
        }

        EditorGUILayout.Space(10);

        if (GUILayout.Button("–ó–∞–∫—Ä—ã—Ç—å"))
        {
            Close();
        }
    }
}

