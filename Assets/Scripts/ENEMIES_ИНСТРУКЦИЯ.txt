═══════════════════════════════════════════════════════════════
    🤖 СИСТЕМА ВРАГОВ - ПОЛНАЯ ИНСТРУКЦИЯ 🤖
═══════════════════════════════════════════════════════════════


📋 БЫСТРАЯ НАСТРОЙКА (5 МИНУТ):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Unity → Lode Runner → Настройка врагов (Enemy Setup)

1️⃣ Создать префаб Enemy
2️⃣ Замените спрайт на спрайт врага
3️⃣ Создать EnemySpawner в сцене
4️⃣ Назначить Enemy Prefab в EnemySpawner
5️⃣ Разместить точки спавна (Spawn Points)
6️⃣ Запустить игру!

✅ ГОТОВО! Враги будут преследовать игрока!


═══════════════════════════════════════════════════════════════


🎮 МЕХАНИКА ВРАГОВ (по оригинальному Lode Runner):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌────────────────────────────────────────────────────────────┐
│ БАЗОВОЕ ПОВЕДЕНИЕ                                          │
├────────────────────────────────────────────────────────────┤
│ ✅ Преследуют игрока в радиусе обнаружения                 │
│ ✅ Ходят по платформам                                     │
│ ✅ Лазают по лестницам                                     │
│ ✅ Падают вниз (как игрок)                                 │
│ ✅ Застревают в ямах на время                              │
│ ✅ Возрождаются после смерти                               │
│                                                            │
│ ❌ НЕ могут копать ямы (только игрок)                      │
│ ❌ НЕ висят на веревках (классическая механика)            │
└────────────────────────────────────────────────────────────┘


┌────────────────────────────────────────────────────────────┐
│ ВЗАИМОДЕЙСТВИЕ С ИГРОКОМ                                   │
├────────────────────────────────────────────────────────────┤
│ 💀 При касании → Игрок умирает                            │
│ 🕳️ Враг упал в яму → Застревает на 3 секунды             │
│ 🔄 После выхода из ямы → Возрождается на спавне           │
└────────────────────────────────────────────────────────────┘


┌────────────────────────────────────────────────────────────┐
│ AI (ИСКУССТВЕННЫЙ ИНТЕЛЛЕКТ)                               │
├────────────────────────────────────────────────────────────┤
│ 🎯 Простой pathfinding к игроку                           │
│ 📏 Проверка расстояния (Detection Range)                  │
│ ↔️ Приоритет: горизонтальное движение → вертикальное      │
│ 🔄 Обновление пути каждые 0.5 секунды                     │
│ 😴 Если игрок далеко → Idle (стоит на месте)             │
└────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════


🔧 КОМПОНЕНТЫ СИСТЕМЫ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌────────────────────────────────────────────────────────────┐
│ 1. EnemyController (Assets/Scripts/Enemy/)                 │
├────────────────────────────────────────────────────────────┤
│ Основной контроллер врага                                  │
│                                                            │
│ Функции:                                                   │
│ • Движение (ходьба, лазание)                               │
│ • AI (преследование игрока)                                │
│ • Взаимодействие с окружением                              │
│ • Застревание в ямах                                       │
│ • Смерть и возрождение                                     │
│                                                            │
│ Компоненты (Required):                                     │
│ • Rigidbody2D                                              │
│ • CapsuleCollider2D                                        │
│ • SpriteRenderer                                           │
│ • Transform GroundCheck (дочерний объект)                  │
└────────────────────────────────────────────────────────────┘


┌────────────────────────────────────────────────────────────┐
│ 2. EnemySpawner (Assets/Scripts/Enemy/)                    │
├────────────────────────────────────────────────────────────┤
│ Менеджер создания врагов                                   │
│                                                            │
│ Функции:                                                   │
│ • Создание врагов при старте уровня                        │
│ • Управление точками спавна                                │
│ • Подсчет живых врагов                                     │
│                                                            │
│ Настройки:                                                 │
│ • Enemy Prefab - префаб врага                              │
│ • Spawn Points - массив точек спавна                       │
│ • Max Enemies - максимум врагов на уровне                  │
└────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════


⚙️ ПАРАМЕТРЫ ENEMYCONTROLLER:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌────────────────────────────────────────────────────────────┐
│ [Скорость движения]                                        │
├────────────────────────────────────────────────────────────┤
│ Walk Speed ............... 3      (скорость ходьбы)       │
│ Climb Speed .............. 2      (скорость лазания)      │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ [Проверка окружения]                                       │
├────────────────────────────────────────────────────────────┤
│ Ground Check ............. Transform (дочерний объект)     │
│ Ground Check Radius ...... 0.2    (радиус проверки)       │
│ Ground Layer ............. Ground, GroundDig               │
│ Ladder Layer ............. Ladder                          │
│ Player Layer ............. Default                         │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ [AI настройки]                                             │
├────────────────────────────────────────────────────────────┤
│ Detection Range .......... 15     (дальность обнаружения) │
│ Update Path Interval ..... 0.5    (обновление пути, сек)  │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ [Яма и возрождение]                                        │
├────────────────────────────────────────────────────────────┤
│ Stuck In Hole Time ....... 3      (время в яме, сек)      │
│ Respawn Delay ............ 2      (задержка возрождения)  │
│ Respawn Point ............ Transform (точка возрождения)  │
└────────────────────────────────────────────────────────────┘


РЕКОМЕНДАЦИИ ПО НАСТРОЙКЕ:

Легкий режим:
  Walk Speed = 2
  Detection Range = 10
  Stuck In Hole Time = 5

Средний режим (рекомендуется):
  Walk Speed = 3
  Detection Range = 15
  Stuck In Hole Time = 3

Сложный режим:
  Walk Speed = 4
  Detection Range = 20
  Stuck In Hole Time = 2


═══════════════════════════════════════════════════════════════


🎯 КАК РАБОТАЕТ AI:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

╔═══════════════════════════════════════════════════════════╗
║  АЛГОРИТМ ПРЕСЛЕДОВАНИЯ                                   ║
╚═══════════════════════════════════════════════════════════╝

КАЖДЫЙ КАДР (Update):
  ↓
1. Проверка расстояния до игрока
  ↓
  ┌─────────────────┐
  │ Расстояние ≤    │
  │ Detection Range?│
  └────┬────────────┘
       │
  ┌────┴────┐
  ДА       НЕТ
  │         │
  ↓         ↓
CHASE     IDLE
  │         │
  ↓         └→ Стоять на месте
  │
2. Вычисление пути (каждые 0.5 сек):
  ↓
  Дельта X = Player.x - Enemy.x
  Дельта Y = Player.y - Enemy.y
  ↓
3. Приоритет движения:
  ↓
  ┌────────────────────────┐
  │ |Дельта X| > 0.5?     │
  └────┬───────────────────┘
       │
  ┌────┴────┐
  ДА       НЕТ
  │         │
  ↓         ↓
Двигаться   Проверить
горизонтально  вертикаль
← или →        ↓
              ┌────────────────┐
              │ На лестнице?   │
              └────┬───────────┘
                   │
              ┌────┴────┐
              ДА       НЕТ
              │         │
              ↓         ↓
         Лазать ↑↓   Продолжать
                      горизонтально


ПРИМЕР ПРЕСЛЕДОВАНИЯ:

    Игрок здесь: 👤
         ↑
         │ (15 юнитов)
         │
    Враг здесь: 🤖

1. Расстояние = 15 ≤ Detection Range (15) → CHASE!
2. Дельта X = 0, Дельта Y = +15
3. |Дельта X| = 0 < 0.5 → Проверить вертикаль
4. На лестнице? ДА → Лазать вверх ↑
5. Враг двигается вверх к игроку


═══════════════════════════════════════════════════════════════


🕳️ МЕХАНИКА ЯМ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

╔═══════════════════════════════════════════════════════════╗
║  ЧТО ПРОИСХОДИТ КОГДА ВРАГ ПАДАЕТ В ЯМУ                  ║
╚═══════════════════════════════════════════════════════════╝

1. Игрок выкапывает яму
   ↓
2. Враг идет в эту сторону
   ↓
3. Враг падает в яму (Falling state)
   ↓
4. Враг касается дна ямы
   ↓
5. DiggableBlock.OnTriggerEnter2D() обнаруживает врага
   ↓
6. Вызов: enemy.StuckInHole()
   ↓
7. Состояние: StuckInHole
   • gravityScale = 0
   • velocity = (0, 0)
   • Таймер запущен
   ↓
8. Ожидание: stuckInHoleTime (3 секунды)
   ↓
9. Время истекло
   ↓
10. Вызов: Respawn()
    • Телепорт на respawnPoint
    • Восстановление физики
    • Состояние: Idle


ИНТЕГРАЦИЯ С DIGGABLEBLOCK:

Вам нужно добавить в DiggableBlock.cs:

private void OnTriggerEnter2D(Collider2D collision)
{
    // Проверяем врага
    EnemyController enemy = collision.GetComponent<EnemyController>();
    if (enemy != null && isDug && !enemy.IsStuckInHole())
    {
        enemy.StuckInHole();
    }
}


═══════════════════════════════════════════════════════════════


🎨 СОЗДАНИЕ ПРЕФАБА ВРАГА:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

СТРУКТУРА ПРЕФАБА:

Enemy (GameObject)
├─ SpriteRenderer
│  └─ Sprite: enemy_sprite.png
├─ Rigidbody2D
│  • Gravity Scale: 3
│  • Freeze Rotation: ✓
│  • Collision Detection: Continuous
├─ CapsuleCollider2D
│  • Size: (0.5, 1)
│  • Direction: Vertical
├─ EnemyController (Script)
│  • [настройте параметры]
└─ GroundCheck (Empty GameObject)
   • Position: (0, -0.6, 0)


АВТОМАТИЧЕСКОЕ СОЗДАНИЕ:

Unity → Lode Runner → Настройка врагов
  → Создать префаб Enemy
  → Замените спрайт
  → Готово!


═══════════════════════════════════════════════════════════════


📍 НАСТРОЙКА ENEMYSPAWNER:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

СТРУКТУРА В ИЕРАРХИИ:

EnemySpawner
├─ SpawnPoint_1 (Transform) → позиция (0, 0, 0)
├─ SpawnPoint_2 (Transform) → позиция (5, 0, 0)
├─ SpawnPoint_3 (Transform) → позиция (10, 0, 0)
└─ ... (можно добавить больше)


НАСТРОЙКИ КОМПОНЕНТА:

[Настройки спавна]
Enemy Prefab ........... Перетащите префаб Enemy
Spawn Points ........... Массив точек спавна
Spawn On Start ......... ✓ (создавать при старте)
Max Enemies ............ 5 (максимум врагов)

[Настройки врагов]
Enemy Walk Speed ....... 3
Enemy Climb Speed ...... 2
Detection Range ........ 15


СОЗДАНИЕ ТОЧЕК СПАВНА:

1. Выделите EnemySpawner
2. Правый клик → Create Empty
3. Назовите: SpawnPoint_1
4. Разместите в нужном месте
5. Перетащите в массив Spawn Points
6. Повторите для других точек


═══════════════════════════════════════════════════════════════


🎮 ПРИМЕРЫ РАЗМЕЩЕНИЯ ВРАГОВ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌───────────────────────────────────────────────────────────┐
│ УРОВЕНЬ 1: Легкий (1 враг)                                │
└───────────────────────────────────────────────────────────┘

    🚪
    ██████
       🪙
    ██████
       🪙
    ██████
    👤  🤖

Враг в одной стороне, игрок в другой.
Простое преследование.


┌───────────────────────────────────────────────────────────┐
│ УРОВЕНЬ 2: Средний (2-3 врага)                            │
└───────────────────────────────────────────────────────────┘

    🚪      🤖
    ██████████
    🪙   ║║   🪙
    ██████████
         🤖
    ██████████
    👤       🪙

Враги в разных частях уровня.
Нужно продумать маршрут.


┌───────────────────────────────────────────────────────────┐
│ УРОВЕНЬ 3: Сложный (4-5 врагов)                           │
└───────────────────────────────────────────────────────────┘

🤖  🚪  🤖
██████████
🪙  ║║  🪙
██████════════
    🤖
████████
👤    🤖

Много врагов, сложный уровень.
Требуется стратегия и точность.


═══════════════════════════════════════════════════════════════


💡 СОВЕТЫ ПО ДИЗАЙНУ УРОВНЕЙ С ВРАГАМИ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ ХОРОШИЕ ПРАКТИКИ:

• Начинайте с 1 врага на первых уровнях
• Постепенно увеличивайте количество
• Размещайте врагов стратегически (не все в одном месте)
• Оставляйте "безопасные зоны" для игрока
• Используйте лестницы для вертикального разделения
• Создавайте ситуации где нужно выкопать яму под врагом

❌ ЧАСТЫЕ ОШИБКИ:

• Слишком много врагов сразу → невозможно пройти
• Враги на старте рядом с игроком → мгновенная смерть
• Нет путей отступления → фрустрация
• Detection Range слишком большой → враги везде видят
• Walk Speed > Player Speed → невозможно убежать


БАЛАНСИРОВКА СЛОЖНОСТИ:

Легко:   1-2 врага, Walk Speed = 2, Detection Range = 10
Средне:  2-3 врага, Walk Speed = 3, Detection Range = 15
Сложно:  4-5 врагов, Walk Speed = 4, Detection Range = 20


═══════════════════════════════════════════════════════════════


🐛 РЕШЕНИЕ ПРОБЛЕМ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

┌────────────────────────────────────────────────────────────┐
│ ❌ Враг не двигается                                       │
├────────────────────────────────────────────────────────────┤
│ ✅ Проверьте Walk Speed > 0                                │
│ ✅ Проверьте что игрок в радиусе Detection Range           │
│ ✅ Проверьте что groundCheck назначен                      │
│ ✅ Проверьте слои (Ground Layer, Ladder Layer)             │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ ❌ Враг не преследует игрока                               │
├────────────────────────────────────────────────────────────┤
│ ✅ Проверьте Detection Range (15 рекомендуется)            │
│ ✅ Проверьте что Player найден в сцене                     │
│ ✅ Увеличьте Debug GUI - должно быть State: Chasing        │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ ❌ Враг не убивает игрока                                  │
├────────────────────────────────────────────────────────────┤
│ ✅ У обоих должны быть Collider'ы (не Trigger!)            │
│ ✅ У обоих должны быть Rigidbody2D                         │
│ ✅ Проверьте что OnCollisionEnter2D() срабатывает          │
└────────────────────────────────────────────────────────────┘

┌────────────────────────────────────────────────────────────┐
│ ❌ Враг застревает на лестнице                             │
├────────────────────────────────────────────────────────────┤
│ ✅ Проверьте Ladder Layer правильно настроен               │
│ ✅ Увеличьте Climb Speed                                   │
│ ✅ Проверьте центрирование на лестнице работает            │
└────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════


✅ ЧЕКЛИСТ НАСТРОЙКИ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

☐ 1. Префаб Enemy создан
☐ 2. Спрайт врага назначен
☐ 3. GroundCheck создан и настроен
☐ 4. Слои настроены (Ground, Ladder, Player)
☐ 5. Параметры настроены (скорости, дальность)
☐ 6. EnemySpawner создан в сцене
☐ 7. Enemy Prefab назначен в EnemySpawner
☐ 8. Точки спавна размещены
☐ 9. Интеграция с DiggableBlock добавлена
☐ 10. Протестировано:
     ☐ Враг создается при старте
     ☐ Враг преследует игрока
     ☐ Враг лазает по лестницам
     ☐ Враг убивает игрока при касании
     ☐ Враг застревает в ямах
     ☐ Враг возрождается


═══════════════════════════════════════════════════════════════


✨ СИСТЕМА ВРАГОВ ГОТОВА! ✨

Теперь ваша игра Lode Runner имеет полноценных врагов
с AI преследованием, как в оригинальной игре!

Удачи в создании сложных уровней! 🚀

